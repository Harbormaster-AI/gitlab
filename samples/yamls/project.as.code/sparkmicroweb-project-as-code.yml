#
# Standard DevOps project creation options.  
#
# Pay close attention to parameters that require values unique  
# to you, such as those for Git, Docker, and AWS.
#
# To use Git, Docker, and any provider, be sure to have created
# an account with each.  
#
# For Git, before generating the project be sure to create the 
# repository and designate as public before
#
# Minimally, anywhere you see an xxx, replace with your relevant value
#

project:
    name: Spark Micro Java Web Demo
    description: Sample Spark Microweb Hibernate project      
    techstack:
       id:                SparkMicroWeb  
                                         # To see the list of available tech stacks on a Harbormaster instance using command:
                                         #     harbormaster_cli stack_list --output pretty

    model:
        identifier:       255
                                      # options:     Unique name or id of an existing model or 
                                      #              full or relative path to a model file of a supported type
                                      #
                                      # To see the list of supported model types use command:
                                      #      harbormaster_cli model_types_supported
                                      #                          
                                      # To see the list of available model on a Harbormaster instance using command:
                                      #      harbormaster_cli model_list --output pretty
                                      #
                                      # If using a JAR/EAR file not already published, must include the package name
#      javaRootPackageName:   com.acme.pojo                                      

#
# DevOps Project Creation Options
#    	
    options:

#            
# Application parameters
#            
    
        application:
            name:                  sparkmicrowebdemo
            description:           Demo Angular7 project generated by Harbormaster
            author:                Dev Team
            email:                 xxxx.xxxxxxxxx@xxxxxxxx.com
            application logo URL:  ./img/turnstone.biologics.png
            company name:          Turnstone Biologics
            version:               0.0.1
            
            
#            
# Docker parameters
#            
        docker:
            userName:     xxxxxxxxxxxx
            password:     xxxxxxxxxxxx
            orgNaHarbormasteralmethods
            repo:         sparkmicrowebdemo
            tag:          latest
             
             
#            
# CI/CD parameters
#            
        cicd:
            platform:  codeship    # options: codeship, circleci, jfrog.pipelines
                                   # jenkins, azure, aws, gitlab, 
                                   # bitbucket, buddy, semaphore
            AES key:               # codeship project key; ex: XKyy2IDcSptIIvMY8KLMVMcxVs+ZK6AyNu1B4Wu1DPY=


#
# Git repository parameters
#
        git:            
            name:        git_test_SparkMicroWeb				# an arbitrary name, but for JFrog, this should be the name of the Git related integration
            username:    xxxx
            password:    xxxx
            repository:  SparkMicroWeb
            tag:         latest
            host:		 bitbucket.org            

#
# HashiCorp Terraform parameters
#
        terraform:
            inUse:             true	
            provider:          aws                   # options: aws, google, azure, nutanix
            region:            us-east-1             # options: any cloud provider region
            ssh-fingerprint:   xxxxxxxxxxxxxxxxx     # required by CircleCI for SSH
            
            
#
# AWS parameters
#
        aws:
            key-pair-name:     xxxxxxxxxxxx      
            vpc:               xxxxxxxxxxxxx        
            ec2-instance-type: t2.medium          # options: any AWS instance type
            access-key:        ASSIGN__ON_CICD_PLATFORM_AS_ENV_VARS
            secret-key:        ASSIGN__ON_CICD_PLATFORM_AS_ENV_VARS
            
#
# Nutanix parameters
#
        nutanix:
            inUse:         false
            userName:      xxxxxxxxxxxxxxxxxxxxxxxxx
            password:      xxxxxxxxxxxxxx
            endpoint:      xxx.xxx.xxx.xxx
            insecure:      true
            port:          xxxxx	
            clusterId:     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
            email:    Harbormasterr.aithods.com
            vmUserName:    xxxxxxxxxxx
            vmPassword:    xxxxxxxxxxx
            vmHost:        xxx.xxx.xxx.3xxx
            vmOS:          linux	# options linux, windows - windows not yet supproted

#
# Kubernetes parameters: If not in use, and Terraform
#                        is in use, physical infrastructure
#                        will be provisioned on the provider
#
        kubernetes:
            inUse:              true
            host:               https://xxx.xxx.xxx.xxx
            project:            xxxxxxxxxxx        # assigned project name
            region:             us-central1-a      # options: any provider region
            hostTarget:         google             # option: google, aws, azure, nutanix
            username:           admin
            password:           5UhfcIPAPsiPXklT
            exposeAsService:    true
            serviceType:        LoadBalancer      # options: LoadBalancer, NodePort, ClusterIP
            useSessionAffinity: true

            
#            
# Artifact repository for build dependencies and binaries            
#
        artifact-repo:
            inUse:              false
            type:				nexus                  # options: nexus, jfrog
            userName:           xxxxxxx
            password:           xxxxxxxx
            email:              xxxx.xxxxxx@xxxxxxx.com
            repoUrl:            http://xxx.xxx.xxx.xxx:8081/repository/npm-public

            
#            
# Hibernate ORM parameters            
#
        hibernate:
            hibernate.connection.driver.class:    com.mysql.jdbc.Driver
            hibernate.connection.username:        xxxx
            hibernate.connection.password:        xxxx
            hibernate.dialect:                    org.hibernate.dialect.MySQL8Dialect
            hibernate.max.fetch.depth:            1
            hibernate.connection.url:             jdbc:mysql://localhost:3306/lambdademo?createDatabaseIfNotExist\u003dtrue #do no remove the createDatabaseIfNotExist\u003dtrue 
